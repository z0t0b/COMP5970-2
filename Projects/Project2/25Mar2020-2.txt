	The paper that I read tries to solve the problem of credential/password stuffing, which is when attackers use username/password combinations from data breaches to attempt to log in to other services their targets may use. This is a problem that results in targeted attacks towards individuals that reuse logins across other websites, and the people that wrote this paper designed a browser extension that alerts users that their credentials were found in a breach with real-time credential lookups. The paper details the parts of this open source project - namely the encryption methods used, how the data is sent back and forth between client and server and all algorithms used within the project. The result is a browser extension for Google Chrome that performs real-time lookups to an API hosting several databases of breached credentials and lets the user know if their username/password comination has been found in a previous breach. The difference between this extension and already existing services of this nature (e.g., HaveIBeenPwned, PasswordPing, etc.) is that the service does not provide the breached credentials or the source of them to the user so that the program cannot be misused; it can only check whether credentials you entered to log in to a service have been breached.
	The main strength of this paper is that they go into high detail about why they made this program, how it works and how it will benefit Internet users that use their program - they even provide statistics of how users with the extension used it to prove their original ideas about why it would work and how it would benefit others. If I had to pick a weakness about the paper I would choose the fact that they didn't provide graphs for all of the statistics - some of the data is just plotted in tables when it could be better represented visually through a graph. If I wrote this paper I would've included more discussion about why breach results and the source of the results is dangerous to be given out to anybody to better give the reader an understanding as to why this browser extension is helpful to normal Internet users and how it circumvents the problems that similar services have experienced/caused. The discussion I would've included could be even more extended if examples of more dangerous services (e.g., services that return breached database results and the source of the results to anybody that searches for the results; an example being WeLeakInfo, a web application that was shut down recently for doing this) were included to demonstrate how these services could be misused - this would help readers completely understand why this browser extension is an integral step in the direction of eradicating credential stuffing.